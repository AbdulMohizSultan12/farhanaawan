age = Number(age);
if (isNaN(age)) {
  voteable = "Input is not a number";
} else {
  voteable = (age < 18) ? "Too young" : "Old enough";
}
let name = null;
let text = "missing";
let result = name ?? text;
// Create an object:
const car = {type:"Fiat", model:"500", color:"white"};
// Ask for car name:
document.getElementById("demo").innerHTML = car?.name;
function myFunction(p1, p2) {
  return p1 * p2;
}

â€‹
1
function myFunction(p1, p2){
2
 return p1*p2*10;
3
}
const months = ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"];

const d = new Date("2021-03-25");
let month = months[d.getMonth()];
const months = ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"];

const d = new Date();
let month = months[d.getMonth()];
const d = new Date("2021-03-25");
d.getDate();
const { Octokit } = require("@octokit/rest");

// Replace these values with your GitHub username, repository name, and personal access token
const owner = "your-username";
const repo = "your-repository";
const pathToDelete = "path/to/your/file";
const token = "your-personal-access-token";

const octokit = new Octokit({
  auth: token,
});

async function deleteFile() {
  try {
    // Get the current content of the file
    const { data } = await octokit.repos.getContent({
      owner,
      repo,
      path: pathToDelete,
    });

    // Delete the file
    await octokit.repos.deleteFile({
      owner,
      repo,
      path: pathToDelete,
      message: "Delete file",
      sha: data.sha,
    });

    console.log(`File '${pathToDelete}' deleted successfully.`);
  } catch (error) {
    console.error(`Error deleting file: ${error.message}`);
  }
}

// Call the function to delete the file
deleteFile();
const { Octokit } = require("@octokit/rest");

const owner = "your-username";
const repo = "your-repository";
const pathToDelete = "path/to/your/file";
const token = "your-personal-access-token";

const octokit = new Octokit({
  auth: token,
});

async function deleteFile() {
  try {
    const { data } = await octokit.repos.getContent({
      owner,
      repo,
      path: pathToDelete,
    });

    await octokit.repos.deleteFile({
      owner,
      repo,
      path: pathToDelete,
      message: "Delete file",
      sha: data.sha,
    });

    console.log(`File '${pathToDelete}' deleted successfully.`);
  } catch (error) {
    console.error(`Error deleting file: ${error.message}`);
  }
}

deleteFile();
